---
title: "Engineering Document"
author: "Michael Lanier"
date: "October 29, 2017"
output: html_document
---



```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```



```{r, echo=F}
#data_master=read.csv(file="Toms_data_consl.csv",header=TRUE)

#tot_reg=max(data_master$Fit_num)
library(plotly)
library(gvlma)
library(MASS)
library(car)
library(ggplot2)
library(corrplot)
diagPlot<-function(model){
    p1<-ggplot(model, aes(.fitted, .resid))+geom_point()
    p1<-p1+stat_smooth(method="loess")+geom_hline(yintercept=0, col="red", linetype="dashed")
    p1<-p1+xlab("Fitted values")+ylab("Residuals")
    p1<-p1+ggtitle("Residual vs Fitted Plot")+theme_bw()
       
    p2<-ggplot(model, aes(qqnorm(.stdresid)[[1]], .stdresid))+geom_point(na.rm = TRUE)+geom_smooth(method = "lm",se = TRUE)
    p2<-p2+geom_abline()+xlab("Theoretical Quantiles")+ylab("Standardized Residuals")
    p2<-p2+ggtitle("Normal Q-Q")+theme_bw()

    
    p3<-ggplot(model, aes(.fitted, sqrt(abs(.stdresid))))+geom_point(na.rm=TRUE)
    p3<-p3+stat_smooth(method="loess", na.rm = TRUE)+xlab("Fitted Value")
    p3<-p3+ylab(expression(sqrt("|Standardized residuals|")))
    p3<-p3+ggtitle("Scale-Location")+theme_bw()
    
    p4<-ggplot(model, aes(seq_along(.cooksd), .cooksd))+geom_bar(stat="identity", position="identity")
    p4<-p4+xlab("Obs. Number")+ylab("Cook's distance")
    p4<-p4+ggtitle("Cook's distance")+theme_bw()
    
    p5<-ggplot(model, aes(.hat, .stdresid))+geom_point(aes(size=.cooksd), na.rm=TRUE)
    p5<-p5+stat_smooth(method="loess", na.rm=TRUE)
    p5<-p5+xlab("Leverage")+ylab("Standardized Residuals")
    p5<-p5+ggtitle("Residual vs Leverage Plot")
    p5<-p5+scale_size_continuous("Cook's Distance", range=c(1,5))
    p5<-p5+theme_bw()+theme(legend.position="bottom")
    
    p6<-ggplot(model, aes(.hat, .cooksd))+geom_point(na.rm=TRUE)+stat_smooth(method="loess", na.rm=TRUE)
    p6<-p6+xlab("Leverage hii")+ylab("Cook's Distance")
    p6<-p6+ggtitle("Cook's dist vs Leverage hii/(1-hii)")
    p6<-p6+geom_abline(slope=seq(0,3,0.5), color="gray", linetype="dashed")
    p6<-p6+theme_bw()
    
    return(list(rvfPlot=p1, qqPlot=p2, sclLocPlot=p3, cdPlot=p4, rvlevPlot=p5, cvlPlot=p6))
    col1 <- colorRampPalette(c("#7F0000","red","#FF7F00","yellow","white", 
                           "cyan", "#007FFF", "blue","#00007F"))
col2 <- colorRampPalette(c("#67001F", "#B2182B", "#D6604D", "#F4A582", "#FDDBC7",
                           "#FFFFFF", "#D1E5F0", "#92C5DE", "#4393C3", "#2166AC", "#053061"))  
col3 <- colorRampPalette(c("red", "white", "blue")) 
col4 <- colorRampPalette(c("#7F0000","red","#FF7F00","yellow","#7FFF7F",  "cyan", "#007FFF", "blue","#00007F"))   

}
 wb <- c("white","black")
```



```{r , echo=FALSE,warning =F,messages=F,errors=F}


data01=read.csv("01_Stiffness.csv",header=T)
data02=read.csv("02_Onset Yield Moment.csv",header=T)
data03=read.csv("03_Wall Stress UL.csv",header=T)
```

##View the data
```{r , echo=FALSE,warning =F,messages=F,errors=F}

head(data01) #Stiffness.of.Connection
head(data02) #Onset.Yield.Moment
head(data03) #Von.Mises.Stress.Under.Unit.Load

data01$B=data01$B-mean(data01$B)


data02$B=data02$B-mean(data02$B)

```



##Notes
* Cooks Distance > 1 indicates an influential or outlier. None of these models have this.
* All Models are significent and their factors are significent at at least an alpha=.1 level.
* VIF test for multicolinearity is problematic with VIF values above 10. No factors had this issue.
* Breusch-Pagan Test Non-constant Variance showed no data with non constant variance.
* Durbin Watson Test for autocorrelation showed no autocorrelation amoung data.
* crPlots give partial fits for individual predictors onto response.



```{r , echo=FALSE,warning =F,messages=F,errors=F}

fit=lm(Stiffness.of.Connection~e+I(B^2)+B+t,data=data01)
```



### Diagnostic Plots and Summary

```{r , echo=FALSE,warning =F,messages=F,errors=F}
 
crPlots(fit)

summary(fit)


```

```{r , echo=FALSE,warning =F,messages=F,errors=F}
fit=lm(Onset.Yield.Moment~e+I(B^2)+B+t,data=data02)
```

### Diagnostic Plots and Summary

```{r , echo=FALSE,warning =F,messages=F,errors=F}

crPlots(fit)
#ceresPlots(fit)
#summary(gvlma(fit) )
#plot(gvlma(fit))
#anova(fit)
summary(fit)
#durbinWatsonTest(fit) #good
#ncvTest(fit) #good
#spreadLevelPlot(fit)
#outlierTest(fit)
#car::vif(fit)
#influenceIndexPlot(fit)
#avPlots(fit)
```

```{r , echo=FALSE,warning =F,messages=F,errors=F}
fit=lm(Von.Mises.Stress.Under.Unit.Load~e+B+t,data=data03)
```


### Diagnostic Plots and Summary

```{r , echo=FALSE,warning =F,messages=F,errors=F}

#diagPlot(fit) #>1 = bad
 
crPlots(fit)

summary(fit)

```



```{r , echo=FALSE,warning =F,messages=F,errors=F}
data04=read.csv("04_Loaded Sidewall OY.csv",header=T)
data05=read.csv("05_Unloaded Sidewall OY.csv",header=T)
data06=read.csv("06_Loaded Sidewall UL.csv",header=T)
data07=read.csv("07_Unloaded Sidewall UL.csv",header=T)



```

```{r , echo=FALSE,warning =F,messages=F,errors=F}
head(data04)
#fit=lm(Loaded.Sidewall.OY~.,data=data04)
#crPlots(fit)

#summary(fit)

print("T is insignificent refit without it.")
data04$e=data04$e-mean(data04$e)
fit=lm(Loaded.Sidewall.OY~I(e^2)+e+B,data=data04)
crPlots(fit)

summary(fit)


```

```{r , echo=FALSE,warning =F,messages=F,errors=F}
head(data05)
fit=lm(Unloaded.Sidewall.OY~.,data=data05)
crPlots(fit)

summary(fit)
```

```{r , echo=FALSE,warning =F,messages=F,errors=F}
print("b and e not significent")
head(data06)
fit=lm(Loaded.Sidewall.Unit.Load~t,data=data06)
crPlots(fit)

summary(fit)
```

```{r , echo=FALSE,warning =F,messages=F,errors=F}

head(data07)
fit=lm(Unloaded.Sidewall.Unit.Load~.,data=data07)
crPlots(fit)

summary(fit)
```
